# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt6 UI code generator 6.1.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


# additional notes
# this code is barely comprehensible. scroll down to 'code starts here' 
# and ignore the entirety of retranslateUi

import os
import json

from PyQt6 import QtCore, QtGui, QtWidgets

import functions as fns


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(765, 709)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.calculate = QtWidgets.QPushButton(self.centralwidget)
        self.calculate.setGeometry(QtCore.QRect(10, 590, 251, 31))
        self.calculate.setObjectName("calculate")
        self.link_info_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.link_info_groupbox.setGeometry(QtCore.QRect(270, 10, 481, 251))
        self.link_info_groupbox.setObjectName("link_info_groupbox")
        self.orbit_groupbox = QtWidgets.QGroupBox(self.link_info_groupbox)
        self.orbit_groupbox.setGeometry(QtCore.QRect(20, 150, 461, 91))
        self.orbit_groupbox.setObjectName("orbit_groupbox")
        self.layoutWidget = QtWidgets.QWidget(self.orbit_groupbox)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 30, 441, 52))
        self.layoutWidget.setObjectName("layoutWidget")
        self.orbit_gridlayout = QtWidgets.QGridLayout(self.layoutWidget)
        self.orbit_gridlayout.setContentsMargins(0, 0, 0, 0)
        self.orbit_gridlayout.setObjectName("orbit_gridlayout")
        self.lbl_planet = QtWidgets.QLabel(self.layoutWidget)
        self.lbl_planet.setObjectName("lbl_planet")
        self.orbit_gridlayout.addWidget(self.lbl_planet, 0, 0, 1, 1)
        self.dropdown_planet = QtWidgets.QComboBox(self.layoutWidget)
        self.dropdown_planet.setObjectName("dropdown_planet")
        self.dropdown_planet.addItem("")
        self.dropdown_planet.addItem("")
        self.dropdown_planet.addItem("")
        self.dropdown_planet.addItem("")
        self.dropdown_planet.addItem("")
        self.orbit_gridlayout.addWidget(self.dropdown_planet, 0, 1, 1, 1)
        self.lbl_orbit_alt = QtWidgets.QLabel(self.layoutWidget)
        self.lbl_orbit_alt.setObjectName("lbl_orbit_alt")
        self.orbit_gridlayout.addWidget(self.lbl_orbit_alt, 0, 2, 1, 2)
        self.in_orbit_alt = QtWidgets.QLineEdit(self.layoutWidget)
        self.in_orbit_alt.setObjectName("in_orbit_alt")
        self.orbit_gridlayout.addWidget(self.in_orbit_alt, 0, 4, 1, 1)
        self.lbl_elong = QtWidgets.QLabel(self.layoutWidget)
        self.lbl_elong.setObjectName("lbl_elong")
        self.orbit_gridlayout.addWidget(self.lbl_elong, 1, 0, 1, 1)
        self.in_elong = QtWidgets.QLineEdit(self.layoutWidget)
        self.in_elong.setObjectName("in_elong")
        self.orbit_gridlayout.addWidget(self.in_elong, 1, 1, 1, 1)
        self.in_elev = QtWidgets.QLineEdit(self.layoutWidget)
        self.in_elev.setObjectName("in_elev")
        self.orbit_gridlayout.addWidget(self.in_elev, 1, 4, 1, 1)
        self.lbl_elev = QtWidgets.QLabel(self.layoutWidget)
        self.lbl_elev.setObjectName("lbl_elev")
        self.orbit_gridlayout.addWidget(self.lbl_elev, 1, 2, 1, 2)
        self.layoutWidget1 = QtWidgets.QWidget(self.link_info_groupbox)
        self.layoutWidget1.setGeometry(QtCore.QRect(20, 120, 301, 24))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.uplink_hbox = QtWidgets.QHBoxLayout(self.layoutWidget1)
        self.uplink_hbox.setContentsMargins(0, 0, 0, 0)
        self.uplink_hbox.setObjectName("uplink_hbox")
        self.lbl_uplink_r = QtWidgets.QLabel(self.layoutWidget1)
        self.lbl_uplink_r.setObjectName("lbl_uplink_r")
        self.uplink_hbox.addWidget(self.lbl_uplink_r)
        self.in_up_r_mantissa = QtWidgets.QLineEdit(self.layoutWidget1)
        self.in_up_r_mantissa.setObjectName("in_up_r_mantissa")
        self.uplink_hbox.addWidget(self.in_up_r_mantissa)
        self.lbl_up_10 = QtWidgets.QLabel(self.layoutWidget1)
        self.lbl_up_10.setObjectName("lbl_up_10")
        self.uplink_hbox.addWidget(self.lbl_up_10)
        self.in_up_r_exp = QtWidgets.QLineEdit(self.layoutWidget1)
        self.in_up_r_exp.setObjectName("in_up_r_exp")
        self.uplink_hbox.addWidget(self.in_up_r_exp)
        self.layoutWidget2 = QtWidgets.QWidget(self.link_info_groupbox)
        self.layoutWidget2.setGeometry(QtCore.QRect(20, 30, 451, 80))
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.layoutWidget2)
        self.gridLayout_4.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.lbl_dl_f = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_dl_f.setObjectName("lbl_dl_f")
        self.gridLayout_4.addWidget(self.lbl_dl_f, 0, 0, 1, 1)
        self.in_dl_f = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_dl_f.setObjectName("in_dl_f")
        self.gridLayout_4.addWidget(self.in_dl_f, 0, 1, 1, 1)
        self.lbl_turn_around = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_turn_around.setObjectName("lbl_turn_around")
        self.gridLayout_4.addWidget(self.lbl_turn_around, 0, 2, 1, 1)
        self.in_turn_around = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_turn_around.setObjectName("in_turn_around")
        self.gridLayout_4.addWidget(self.in_turn_around, 0, 3, 1, 1)
        self.lbl_tx_loss_factor = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_tx_loss_factor.setObjectName("lbl_tx_loss_factor")
        self.gridLayout_4.addWidget(self.lbl_tx_loss_factor, 1, 0, 1, 1)
        self.in_tx_loss_factor = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_tx_loss_factor.setObjectName("in_tx_loss_factor")
        self.gridLayout_4.addWidget(self.in_tx_loss_factor, 1, 1, 1, 1)
        self.lbl_rx_loss_factor = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_rx_loss_factor.setObjectName("lbl_rx_loss_factor")
        self.gridLayout_4.addWidget(self.lbl_rx_loss_factor, 1, 2, 1, 1)
        self.in_rx_loss_factor = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_rx_loss_factor.setObjectName("in_rx_loss_factor")
        self.gridLayout_4.addWidget(self.in_rx_loss_factor, 1, 3, 1, 1)
        self.lbl_path_loss = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_path_loss.setObjectName("lbl_path_loss")
        self.gridLayout_4.addWidget(self.lbl_path_loss, 2, 0, 1, 1)
        self.in_path_loss = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_path_loss.setObjectName("in_path_loss")
        self.gridLayout_4.addWidget(self.in_path_loss, 2, 1, 1, 1)
        self.lbl_up_req_ebn0 = QtWidgets.QLabel(self.layoutWidget2)
        self.lbl_up_req_ebn0.setObjectName("lbl_up_req_ebn0")
        self.gridLayout_4.addWidget(self.lbl_up_req_ebn0, 2, 2, 1, 1)
        self.in_up_req_ebn0 = QtWidgets.QLineEdit(self.layoutWidget2)
        self.in_up_req_ebn0.setObjectName("in_up_req_ebn0")
        self.gridLayout_4.addWidget(self.in_up_req_ebn0, 2, 3, 1, 1)
        self.spacecraft_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.spacecraft_groupbox.setGeometry(QtCore.QRect(10, 230, 251, 181))
        self.spacecraft_groupbox.setObjectName("spacecraft_groupbox")
        self.layoutWidget3 = QtWidgets.QWidget(self.spacecraft_groupbox)
        self.layoutWidget3.setGeometry(QtCore.QRect(9, 26, 231, 136))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.spacecraft_gridlayout = QtWidgets.QGridLayout(self.layoutWidget3)
        self.spacecraft_gridlayout.setContentsMargins(0, 0, 0, 0)
        self.spacecraft_gridlayout.setObjectName("spacecraft_gridlayout")
        self.lbl_sc_t_sys = QtWidgets.QLabel(self.layoutWidget3)
        self.lbl_sc_t_sys.setObjectName("lbl_sc_t_sys")
        self.spacecraft_gridlayout.addWidget(self.lbl_sc_t_sys, 4, 0, 1, 2)
        self.in_sc_t_sys = QtWidgets.QLineEdit(self.layoutWidget3)
        self.in_sc_t_sys.setObjectName("in_sc_t_sys")
        self.spacecraft_gridlayout.addWidget(self.in_sc_t_sys, 4, 2, 1, 1)
        self.in_sc_point = QtWidgets.QLineEdit(self.layoutWidget3)
        self.in_sc_point.setObjectName("in_sc_point")
        self.spacecraft_gridlayout.addWidget(self.in_sc_point, 3, 2, 1, 1)
        self.in_sc_ant_eta = QtWidgets.QLineEdit(self.layoutWidget3)
        self.in_sc_ant_eta.setObjectName("in_sc_ant_eta")
        self.spacecraft_gridlayout.addWidget(self.in_sc_ant_eta, 2, 2, 1, 1)
        self.in_sc_ant_d = QtWidgets.QLineEdit(self.layoutWidget3)
        self.in_sc_ant_d.setObjectName("in_sc_ant_d")
        self.spacecraft_gridlayout.addWidget(self.in_sc_ant_d, 1, 2, 1, 1)
        self.in_sc_power = QtWidgets.QLineEdit(self.layoutWidget3)
        self.in_sc_power.setObjectName("in_sc_power")
        self.spacecraft_gridlayout.addWidget(self.in_sc_power, 0, 2, 1, 1)
        self.lbl_sc_power = QtWidgets.QLabel(self.layoutWidget3)
        self.lbl_sc_power.setObjectName("lbl_sc_power")
        self.spacecraft_gridlayout.addWidget(self.lbl_sc_power, 0, 0, 1, 2)
        self.lbl_sc_ant_d = QtWidgets.QLabel(self.layoutWidget3)
        self.lbl_sc_ant_d.setObjectName("lbl_sc_ant_d")
        self.spacecraft_gridlayout.addWidget(self.lbl_sc_ant_d, 1, 0, 1, 2)
        self.lbl_sc_ant_eta = QtWidgets.QLabel(self.layoutWidget3)
        self.lbl_sc_ant_eta.setObjectName("lbl_sc_ant_eta")
        self.spacecraft_gridlayout.addWidget(self.lbl_sc_ant_eta, 2, 0, 1, 2)
        self.lbl_sc_point = QtWidgets.QLabel(self.layoutWidget3)
        self.lbl_sc_point.setObjectName("lbl_sc_point")
        self.spacecraft_gridlayout.addWidget(self.lbl_sc_point, 3, 0, 1, 2)
        self.downlink_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.downlink_groupbox.setGeometry(QtCore.QRect(10, 10, 251, 221))
        self.downlink_groupbox.setObjectName("downlink_groupbox")
        self.layoutWidget4 = QtWidgets.QWidget(self.downlink_groupbox)
        self.layoutWidget4.setGeometry(QtCore.QRect(10, 30, 230, 181))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.downlink_gridlayout = QtWidgets.QGridLayout(self.layoutWidget4)
        self.downlink_gridlayout.setContentsMargins(0, 0, 0, 0)
        self.downlink_gridlayout.setObjectName("downlink_gridlayout")
        self.in_dl_time = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_dl_time.setObjectName("in_dl_time")
        self.downlink_gridlayout.addWidget(self.in_dl_time, 4, 1, 1, 1)
        self.lbl_bppx = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_bppx.setObjectName("lbl_bppx")
        self.downlink_gridlayout.addWidget(self.lbl_bppx, 2, 0, 1, 1)
        self.lbl_px_size = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_px_size.setObjectName("lbl_px_size")
        self.downlink_gridlayout.addWidget(self.lbl_px_size, 1, 0, 1, 1)
        self.lbl_duty_cycle = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_duty_cycle.setObjectName("lbl_duty_cycle")
        self.downlink_gridlayout.addWidget(self.lbl_duty_cycle, 3, 0, 1, 1)
        self.lbl_dl_time = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_dl_time.setObjectName("lbl_dl_time")
        self.downlink_gridlayout.addWidget(self.lbl_dl_time, 4, 0, 1, 1)
        self.in_swath_width = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_swath_width.setObjectName("in_swath_width")
        self.downlink_gridlayout.addWidget(self.in_swath_width, 0, 1, 1, 1)
        self.in_req_dl_ebn0 = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_req_dl_ebn0.setObjectName("in_req_dl_ebn0")
        self.downlink_gridlayout.addWidget(self.in_req_dl_ebn0, 5, 1, 1, 1)
        self.in_bppx = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_bppx.setObjectName("in_bppx")
        self.downlink_gridlayout.addWidget(self.in_bppx, 2, 1, 1, 1)
        self.lbl_swath_width = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_swath_width.setObjectName("lbl_swath_width")
        self.downlink_gridlayout.addWidget(self.lbl_swath_width, 0, 0, 1, 1)
        self.in_px_size = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_px_size.setObjectName("in_px_size")
        self.downlink_gridlayout.addWidget(self.in_px_size, 1, 1, 1, 1)
        self.in_duty_cycle = QtWidgets.QLineEdit(self.layoutWidget4)
        self.in_duty_cycle.setObjectName("in_duty_cycle")
        self.downlink_gridlayout.addWidget(self.in_duty_cycle, 3, 1, 1, 1)
        self.lbl_req_dl_ebn0 = QtWidgets.QLabel(self.layoutWidget4)
        self.lbl_req_dl_ebn0.setObjectName("lbl_req_dl_ebn0")
        self.downlink_gridlayout.addWidget(self.lbl_req_dl_ebn0, 5, 0, 1, 1)
        self.ground_station_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.ground_station_groupbox.setGeometry(QtCore.QRect(10, 410, 251, 171))
        self.ground_station_groupbox.setObjectName("ground_station_groupbox")
        self.layoutWidget5 = QtWidgets.QWidget(self.ground_station_groupbox)
        self.layoutWidget5.setGeometry(QtCore.QRect(11, 26, 225, 136))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.ground_station_gridlayout = QtWidgets.QGridLayout(self.layoutWidget5)
        self.ground_station_gridlayout.setContentsMargins(0, 0, 0, 0)
        self.ground_station_gridlayout.setObjectName("ground_station_gridlayout")
        self.lbl_gs_t_sys = QtWidgets.QLabel(self.layoutWidget5)
        self.lbl_gs_t_sys.setObjectName("lbl_gs_t_sys")
        self.ground_station_gridlayout.addWidget(self.lbl_gs_t_sys, 4, 0, 1, 3)
        self.in_gs_t_sys = QtWidgets.QLineEdit(self.layoutWidget5)
        self.in_gs_t_sys.setObjectName("in_gs_t_sys")
        self.ground_station_gridlayout.addWidget(self.in_gs_t_sys, 4, 3, 1, 1)
        self.in_gs_point = QtWidgets.QLineEdit(self.layoutWidget5)
        self.in_gs_point.setObjectName("in_gs_point")
        self.ground_station_gridlayout.addWidget(self.in_gs_point, 2, 3, 1, 1)
        self.in_gs_ant_eta = QtWidgets.QLineEdit(self.layoutWidget5)
        self.in_gs_ant_eta.setObjectName("in_gs_ant_eta")
        self.ground_station_gridlayout.addWidget(self.in_gs_ant_eta, 3, 3, 1, 1)
        self.in_gs_ant_d = QtWidgets.QLineEdit(self.layoutWidget5)
        self.in_gs_ant_d.setObjectName("in_gs_ant_d")
        self.ground_station_gridlayout.addWidget(self.in_gs_ant_d, 1, 3, 1, 1)
        self.in_gs_power = QtWidgets.QLineEdit(self.layoutWidget5)
        self.in_gs_power.setObjectName("in_gs_power")
        self.ground_station_gridlayout.addWidget(self.in_gs_power, 0, 3, 1, 1)
        self.lbl_gs_point = QtWidgets.QLabel(self.layoutWidget5)
        self.lbl_gs_point.setObjectName("lbl_gs_point")
        self.ground_station_gridlayout.addWidget(self.lbl_gs_point, 2, 0, 1, 3)
        self.lbl_gs_ant_d = QtWidgets.QLabel(self.layoutWidget5)
        self.lbl_gs_ant_d.setObjectName("lbl_gs_ant_d")
        self.ground_station_gridlayout.addWidget(self.lbl_gs_ant_d, 1, 0, 1, 3)
        self.lbl_gs_power = QtWidgets.QLabel(self.layoutWidget5)
        self.lbl_gs_power.setObjectName("lbl_gs_power")
        self.ground_station_gridlayout.addWidget(self.lbl_gs_power, 0, 0, 1, 3)
        self.lbl_gs_ant_eta = QtWidgets.QLabel(self.layoutWidget5)
        self.lbl_gs_ant_eta.setObjectName("lbl_gs_ant_eta")
        self.ground_station_gridlayout.addWidget(self.lbl_gs_ant_eta, 3, 0, 1, 3)
        self.output_groupbox = QtWidgets.QGroupBox(self.centralwidget)
        self.output_groupbox.setGeometry(QtCore.QRect(270, 270, 481, 391))
        self.output_groupbox.setObjectName("output_groupbox")
        self.layoutWidget6 = QtWidgets.QWidget(self.output_groupbox)
        self.layoutWidget6.setGeometry(QtCore.QRect(10, 20, 461, 357))
        self.layoutWidget6.setObjectName("layoutWidget6")
        self.output_gridlayout = QtWidgets.QGridLayout(self.layoutWidget6)
        self.output_gridlayout.setContentsMargins(0, 0, 0, 0)
        self.output_gridlayout.setObjectName("output_gridlayout")
        self.label_138 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_138.setObjectName("label_138")
        self.output_gridlayout.addWidget(self.label_138, 4, 0, 1, 1)
        self.label_93 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_93.setObjectName("label_93")
        self.output_gridlayout.addWidget(self.label_93, 5, 1, 1, 1)
        self.label_90 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_90.setObjectName("label_90")
        self.output_gridlayout.addWidget(self.label_90, 1, 0, 1, 1)
        self.label_115 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_115.setObjectName("label_115")
        self.output_gridlayout.addWidget(self.label_115, 1, 1, 1, 1)
        self.label_122 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_122.setObjectName("label_122")
        self.output_gridlayout.addWidget(self.label_122, 3, 1, 1, 1)
        self.label_94 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_94.setObjectName("label_94")
        self.output_gridlayout.addWidget(self.label_94, 6, 0, 1, 1)
        self.label_126 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_126.setObjectName("label_126")
        self.output_gridlayout.addWidget(self.label_126, 13, 0, 1, 1)
        self.label_137 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_137.setObjectName("label_137")
        self.output_gridlayout.addWidget(self.label_137, 13, 1, 1, 1)
        self.label_136 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_136.setObjectName("label_136")
        self.output_gridlayout.addWidget(self.label_136, 2, 1, 1, 1)
        self.label_125 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_125.setObjectName("label_125")
        self.output_gridlayout.addWidget(self.label_125, 15, 1, 1, 1)
        self.label_116 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_116.setObjectName("label_116")
        self.output_gridlayout.addWidget(self.label_116, 15, 0, 1, 1)
        self.label_119 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_119.setObjectName("label_119")
        self.output_gridlayout.addWidget(self.label_119, 7, 1, 1, 1)
        self.label_117 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_117.setObjectName("label_117")
        self.output_gridlayout.addWidget(self.label_117, 7, 0, 1, 1)
        self.label_103 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_103.setObjectName("label_103")
        self.output_gridlayout.addWidget(self.label_103, 9, 0, 1, 1)
        self.label_52 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_52.setObjectName("label_52")
        self.output_gridlayout.addWidget(self.label_52, 0, 2, 1, 1)
        self.label_111 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_111.setObjectName("label_111")
        self.output_gridlayout.addWidget(self.label_111, 0, 0, 1, 1)
        self.label_104 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_104.setObjectName("label_104")
        self.output_gridlayout.addWidget(self.label_104, 10, 1, 1, 1)
        self.label_85 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_85.setObjectName("label_85")
        self.output_gridlayout.addWidget(self.label_85, 14, 0, 1, 1)
        self.label_102 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_102.setObjectName("label_102")
        self.output_gridlayout.addWidget(self.label_102, 6, 1, 1, 1)
        self.label_124 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_124.setObjectName("label_124")
        self.output_gridlayout.addWidget(self.label_124, 8, 0, 1, 1)
        self.label_140 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_140.setObjectName("label_140")
        self.output_gridlayout.addWidget(self.label_140, 8, 1, 1, 1)
        self.label_120 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_120.setObjectName("label_120")
        self.output_gridlayout.addWidget(self.label_120, 4, 1, 1, 1)
        self.label_84 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_84.setObjectName("label_84")
        self.output_gridlayout.addWidget(self.label_84, 9, 1, 1, 1)
        self.label_109 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_109.setObjectName("label_109")
        self.output_gridlayout.addWidget(self.label_109, 10, 0, 1, 1)
        self.label_110 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_110.setObjectName("label_110")
        self.output_gridlayout.addWidget(self.label_110, 11, 0, 1, 1)
        self.label_87 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_87.setObjectName("label_87")
        self.output_gridlayout.addWidget(self.label_87, 2, 0, 1, 1)
        self.label_141 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_141.setObjectName("label_141")
        self.output_gridlayout.addWidget(self.label_141, 3, 0, 1, 1)
        self.label_106 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_106.setObjectName("label_106")
        self.output_gridlayout.addWidget(self.label_106, 11, 1, 1, 1)
        self.label_108 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_108.setObjectName("label_108")
        self.output_gridlayout.addWidget(self.label_108, 14, 1, 1, 1)
        self.label_142 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_142.setObjectName("label_142")
        self.output_gridlayout.addWidget(self.label_142, 5, 0, 1, 1)
        self.label_53 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_53.setObjectName("label_53")
        self.output_gridlayout.addWidget(self.label_53, 0, 3, 1, 1)
        self.line_22 = QtWidgets.QFrame(self.layoutWidget6)
        self.line_22.setFrameShape(QtWidgets.QFrame.Shape.HLine)
        self.line_22.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.line_22.setObjectName("line_22")
        self.output_gridlayout.addWidget(self.line_22, 12, 0, 1, 4)
        self.out_dl_p = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_p.setObjectName("out_dl_p")
        self.output_gridlayout.addWidget(self.out_dl_p, 1, 2, 1, 1)
        self.out_ul_p = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_p.setObjectName("out_ul_p")
        self.output_gridlayout.addWidget(self.out_ul_p, 1, 3, 1, 1)
        self.out_dl_l_l = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_l_l.setObjectName("out_dl_l_l")
        self.output_gridlayout.addWidget(self.out_dl_l_l, 2, 2, 1, 1)
        self.out_dl_g_t = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_g_t.setObjectName("out_dl_g_t")
        self.output_gridlayout.addWidget(self.out_dl_g_t, 3, 2, 1, 1)
        self.out_dl_l_a = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_l_a.setObjectName("out_dl_l_a")
        self.output_gridlayout.addWidget(self.out_dl_l_a, 4, 2, 1, 1)
        self.out_dl_l_s = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_l_s.setObjectName("out_dl_l_s")
        self.output_gridlayout.addWidget(self.out_dl_l_s, 5, 2, 1, 1)
        self.out_dl_g_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_g_r.setObjectName("out_dl_g_r")
        self.output_gridlayout.addWidget(self.out_dl_g_r, 6, 2, 1, 1)
        self.out_dl_l_pr = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_l_pr.setObjectName("out_dl_l_pr")
        self.output_gridlayout.addWidget(self.out_dl_l_pr, 7, 2, 1, 1)
        self.out_dl_l_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_l_r.setObjectName("out_dl_l_r")
        self.output_gridlayout.addWidget(self.out_dl_l_r, 8, 2, 1, 1)
        self.out_dl_1_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_1_r.setObjectName("out_dl_1_r")
        self.output_gridlayout.addWidget(self.out_dl_1_r, 9, 2, 1, 1)
        self.out_dl_1_k_b = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_1_k_b.setObjectName("out_dl_1_k_b")
        self.output_gridlayout.addWidget(self.out_dl_1_k_b, 10, 2, 1, 1)
        self.out_dl_1_t_s = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_1_t_s.setObjectName("out_dl_1_t_s")
        self.output_gridlayout.addWidget(self.out_dl_1_t_s, 11, 2, 1, 1)
        self.out_dl_eb_n0 = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_eb_n0.setObjectName("out_dl_eb_n0")
        self.output_gridlayout.addWidget(self.out_dl_eb_n0, 13, 2, 1, 1)
        self.out_dl_eb_n0_req = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_eb_n0_req.setObjectName("out_dl_eb_n0_req")
        self.output_gridlayout.addWidget(self.out_dl_eb_n0_req, 14, 2, 1, 1)
        self.out_dl_margin = QtWidgets.QLabel(self.layoutWidget6)
        self.out_dl_margin.setObjectName("out_dl_margin")
        self.output_gridlayout.addWidget(self.out_dl_margin, 15, 2, 1, 1)
        self.out_ul_l_l = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_l_l.setObjectName("out_ul_l_l")
        self.output_gridlayout.addWidget(self.out_ul_l_l, 2, 3, 1, 1)
        self.out_ul_g_t = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_g_t.setObjectName("out_ul_g_t")
        self.output_gridlayout.addWidget(self.out_ul_g_t, 3, 3, 1, 1)
        self.out_ul_l_a = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_l_a.setObjectName("out_ul_l_a")
        self.output_gridlayout.addWidget(self.out_ul_l_a, 4, 3, 1, 1)
        self.out_ul_l_s = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_l_s.setObjectName("out_ul_l_s")
        self.output_gridlayout.addWidget(self.out_ul_l_s, 5, 3, 1, 1)
        self.out_ul_g_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_g_r.setObjectName("out_ul_g_r")
        self.output_gridlayout.addWidget(self.out_ul_g_r, 6, 3, 1, 1)
        self.out_ul_l_pr = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_l_pr.setObjectName("out_ul_l_pr")
        self.output_gridlayout.addWidget(self.out_ul_l_pr, 7, 3, 1, 1)
        self.out_ul_l_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_l_r.setObjectName("out_ul_l_r")
        self.output_gridlayout.addWidget(self.out_ul_l_r, 8, 3, 1, 1)
        self.out_ul_1_r = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_1_r.setObjectName("out_ul_1_r")
        self.output_gridlayout.addWidget(self.out_ul_1_r, 9, 3, 1, 1)
        self.out_ul_1_k_b = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_1_k_b.setObjectName("out_ul_1_k_b")
        self.output_gridlayout.addWidget(self.out_ul_1_k_b, 10, 3, 1, 1)
        self.out_ul_1_t_s = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_1_t_s.setObjectName("out_ul_1_t_s")
        self.output_gridlayout.addWidget(self.out_ul_1_t_s, 11, 3, 1, 1)
        self.out_ul_eb_n0 = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_eb_n0.setObjectName("out_ul_eb_n0")
        self.output_gridlayout.addWidget(self.out_ul_eb_n0, 13, 3, 1, 1)
        self.out_ul_eb_n0_req = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_eb_n0_req.setObjectName("out_ul_eb_n0_req")
        self.output_gridlayout.addWidget(self.out_ul_eb_n0_req, 14, 3, 1, 1)
        self.out_ul_margin = QtWidgets.QLabel(self.layoutWidget6)
        self.out_ul_margin.setObjectName("out_ul_margin")
        self.output_gridlayout.addWidget(self.out_ul_margin, 15, 3, 1, 1)
        self.label_133 = QtWidgets.QLabel(self.layoutWidget6)
        self.label_133.setObjectName("label_133")
        self.output_gridlayout.addWidget(self.label_133, 0, 1, 1, 1)
        self.loadbutton = QtWidgets.QPushButton(self.centralwidget)
        self.loadbutton.setGeometry(QtCore.QRect(10, 630, 121, 31))
        self.loadbutton.setObjectName("loadbutton")
        self.savebutton = QtWidgets.QPushButton(self.centralwidget)
        self.savebutton.setGeometry(QtCore.QRect(140, 630, 121, 31))
        self.savebutton.setObjectName("savebutton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 765, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        self.setup()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Link Budget Calculator"))
        self.calculate.setText(_translate("MainWindow", "Calculate Link Budget [CTRL + Enter]"))
        self.calculate.setShortcut(_translate("MainWindow", "Ctrl+Return"))
        self.link_info_groupbox.setTitle(_translate("MainWindow", "Link information"))
        self.orbit_groupbox.setTitle(_translate("MainWindow", "Orbit information"))
        self.lbl_planet.setText(_translate("MainWindow", "Orbit central body"))
        self.dropdown_planet.setItemText(0, _translate("MainWindow", "Earth"))
        self.dropdown_planet.setItemText(1, _translate("MainWindow", "Moon"))
        self.dropdown_planet.setItemText(2, _translate("MainWindow", "Mercury"))
        self.dropdown_planet.setItemText(3, _translate("MainWindow", "Mars"))
        self.dropdown_planet.setItemText(4, _translate("MainWindow", "Saturn"))
        self.lbl_orbit_alt.setText(_translate("MainWindow", "Orbit height [km]"))
        self.lbl_elong.setText(_translate("MainWindow", "Elongation angle [deg]"))
        self.lbl_elev.setText(_translate("MainWindow", "Elevation angle [deg]"))
        self.lbl_uplink_r.setText(_translate("MainWindow", "Uplink data rate [bits/s]"))
        self.lbl_up_10.setText(_translate("MainWindow", "* 10^"))
        self.lbl_dl_f.setText(_translate("MainWindow", "Downlink frequency [GHz]"))
        self.lbl_turn_around.setText(_translate("MainWindow", "Turn around ratio [-]"))
        self.lbl_tx_loss_factor.setText(_translate("MainWindow", "Transmitter loss factor [-]"))
        self.lbl_rx_loss_factor.setText(_translate("MainWindow", "Receiver loss factor [-]"))
        self.lbl_path_loss.setText(_translate("MainWindow", "Transmission path loss [dB]"))
        self.lbl_up_req_ebn0.setText(_translate("MainWindow", "Required uplink Eb/N0"))
        self.spacecraft_groupbox.setTitle(_translate("MainWindow", "Spacecraft"))
        self.lbl_sc_t_sys.setText(_translate("MainWindow", "System noise temperature [K]"))
        self.lbl_sc_power.setText(_translate("MainWindow", "Transmitter power [W]"))
        self.lbl_sc_ant_d.setText(_translate("MainWindow", "Antenna diameter [m]"))
        self.lbl_sc_ant_eta.setText(_translate("MainWindow", "Antenna efficiency [-]"))
        self.lbl_sc_point.setText(_translate("MainWindow", "Pointing offset [deg]"))
        self.downlink_groupbox.setTitle(_translate("MainWindow", "Downlink information"))
        self.lbl_bppx.setText(_translate("MainWindow", "Bits per pixel"))
        self.lbl_px_size.setText(_translate("MainWindow", "Pixel size [arcmin]"))
        self.lbl_duty_cycle.setText(_translate("MainWindow", "Duty cycle [-]"))
        self.lbl_dl_time.setText(_translate("MainWindow", "Downlink time [hr/day]"))
        self.lbl_swath_width.setText(_translate("MainWindow", "Swath width angle [deg]"))
        self.lbl_req_dl_ebn0.setText(_translate("MainWindow", "Required downlink Eb/N0 [dB]"))
        self.ground_station_groupbox.setTitle(_translate("MainWindow", "Ground station"))
        self.lbl_gs_t_sys.setText(_translate("MainWindow", "System noise temperature [K]"))
        self.lbl_gs_point.setText(_translate("MainWindow", "Pointing offset/alpha_1/2 [-]"))
        self.lbl_gs_ant_d.setText(_translate("MainWindow", "Antenna diameter [m]"))
        self.lbl_gs_power.setText(_translate("MainWindow", "Transmitter power [W]"))
        self.lbl_gs_ant_eta.setText(_translate("MainWindow", "Antenna efficiency [-]"))
        self.output_groupbox.setTitle(_translate("MainWindow", "Output"))
        self.label_138.setText(_translate("MainWindow", "L_a"))
        self.label_93.setText(_translate("MainWindow", "Free space loss"))
        self.label_90.setText(_translate("MainWindow", "P"))
        self.label_115.setText(_translate("MainWindow", "Transmitter power"))
        self.label_122.setText(_translate("MainWindow", "Transmitter antenna gain"))
        self.label_94.setText(_translate("MainWindow", "G_r"))
        self.label_126.setText(_translate("MainWindow", "Eb/N0"))
        self.label_137.setText(_translate("MainWindow", "Received signal to noise ratio"))
        self.label_136.setText(_translate("MainWindow", "Transmitter loss factor"))
        self.label_125.setText(_translate("MainWindow", "Signal to noise ratio margin"))
        self.label_116.setText(_translate("MainWindow", "Eb_N0_margin"))
        self.label_119.setText(_translate("MainWindow", "Pointing loss"))
        self.label_117.setText(_translate("MainWindow", "L_pr"))
        self.label_103.setText(_translate("MainWindow", "1/R"))
        self.label_52.setText(_translate("MainWindow", "Downlink [dB]"))
        self.label_111.setText(_translate("MainWindow", "Parameter"))
        self.label_104.setText(_translate("MainWindow", "Boltzmann constant"))
        self.label_85.setText(_translate("MainWindow", "(Eb/N0)_req"))
        self.label_102.setText(_translate("MainWindow", "Receiver antenna gain"))
        self.label_124.setText(_translate("MainWindow", "L_r"))
        self.label_140.setText(_translate("MainWindow", "Receiver loss factor"))
        self.label_120.setText(_translate("MainWindow", "Transmission path loss"))
        self.label_84.setText(_translate("MainWindow", "Required data rate"))
        self.label_109.setText(_translate("MainWindow", "1/k_B"))
        self.label_110.setText(_translate("MainWindow", "1/T_s"))
        self.label_87.setText(_translate("MainWindow", "L_l"))
        self.label_141.setText(_translate("MainWindow", "G_t"))
        self.label_106.setText(_translate("MainWindow", "Receiver system noise temperature"))
        self.label_108.setText(_translate("MainWindow", "Required signal to noise ratio"))
        self.label_142.setText(_translate("MainWindow", "L_s"))
        self.label_53.setText(_translate("MainWindow", "Uplink [dB]"))
        self.out_dl_p.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_p.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_l_l.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_g_t.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_l_a.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_l_s.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_g_r.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_l_pr.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_l_r.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_1_r.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_1_k_b.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_1_t_s.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_eb_n0.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_eb_n0_req.setText(_translate("MainWindow", "+0.00"))
        self.out_dl_margin.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_l_l.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_g_t.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_l_a.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_l_s.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_g_r.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_l_pr.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_l_r.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_1_r.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_1_k_b.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_1_t_s.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_eb_n0.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_eb_n0_req.setText(_translate("MainWindow", "+0.00"))
        self.out_ul_margin.setText(_translate("MainWindow", "+0.00"))
        self.label_133.setText(_translate("MainWindow", "Parameter name"))
        self.loadbutton.setText(_translate("MainWindow", "Load [Ctrl + O]"))
        self.loadbutton.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.savebutton.setText(_translate("MainWindow", "Save [Ctrl + S]"))
        self.savebutton.setShortcut(_translate("MainWindow", "Ctrl+S"))

    # for my sanity
    def setup(self):
        self.validate_non_negative = QtGui.QDoubleValidator(0, 1e100, 100)
        self.validate_allow_negative = QtGui.QDoubleValidator()
        self.validate_percentage = QtGui.QDoubleValidator(0, 100, 100)
        self.validate_zero_to_one = QtGui.QDoubleValidator(0, 1, 100)
        self.validate_integer = QtGui.QIntValidator()
        self.validate_special_dl_time = QtGui.QDoubleValidator(0, 24, 100) 
        self.validate_special_turn_around_ratio = QtGui.QRegularExpressionValidator(
            QtCore.QRegularExpression(r'([0-9]+(/[0-9]+)+)'))
        self.validate_special_mantissa = QtGui.QDoubleValidator(1, 10, 100)
        self.validate_special_elongation = QtGui.QDoubleValidator(0, 180, 100)
        self.validate_special_elevation = QtGui.QDoubleValidator(0, 90, 100)

        self.all_text_inputs_with_validators = {
            # downlink information
            self.in_swath_width: self.validate_non_negative,
            self.in_px_size: self.validate_non_negative,
            self.in_bppx: self.validate_non_negative,
            self.in_duty_cycle: self.validate_zero_to_one,
            self.in_dl_time: self.validate_special_dl_time,
            self.in_req_dl_ebn0: self.validate_allow_negative,
            
            # link information
            self.in_dl_f: self.validate_non_negative,
            self.in_turn_around: self.validate_special_turn_around_ratio,
            self.in_tx_loss_factor: self.validate_zero_to_one,
            self.in_rx_loss_factor: self.validate_zero_to_one,
            self.in_path_loss: self.validate_allow_negative,
            self.in_up_req_ebn0: self.validate_allow_negative,
            self.in_up_r_mantissa: self.validate_special_mantissa,
            self.in_up_r_exp: self.validate_integer,
            self.in_orbit_alt: self.validate_non_negative,
            
            # spacecraft
            self.in_sc_power: self.validate_non_negative,
            self.in_sc_ant_d: self.validate_non_negative,
            self.in_sc_ant_eta: self.validate_zero_to_one,
            self.in_sc_point: self.validate_non_negative,
            self.in_sc_t_sys: self.validate_non_negative,
            
            # ground station
            self.in_gs_power: self.validate_non_negative,
            self.in_gs_ant_d: self.validate_non_negative,
            self.in_gs_point: self.validate_non_negative,
            self.in_gs_ant_eta: self.validate_zero_to_one,
            self.in_gs_t_sys: self.validate_non_negative,
        }
        
        self.normal_names = {
            # downlink information
            self.in_swath_width: 'Payload swath width',
            self.in_px_size: 'Pixel size',
            self.in_bppx: 'Bits per pixel',
            self.in_duty_cycle: 'Duty cycle',
            self.in_dl_time: 'Downlink time',
            self.in_req_dl_ebn0: 'Required downlink Eb/N0',
            
            # link information
            self.in_dl_f: 'Downlink frequency',
            self.in_turn_around: 'Turn around ratio',
            self.in_tx_loss_factor: 'Transmitter loss factor',
            self.in_rx_loss_factor: 'Receiver loss factor',
            self.in_path_loss: 'Path loss',
            self.in_up_req_ebn0: 'Required uplink Eb/N0',
            self.in_up_r_mantissa: 'Uplink data rate mantissa',
            self.in_up_r_exp: 'Uplink data rate exponent',
            self.in_orbit_alt: 'Orbit altitude',
            
            # spacecraft
            self.in_sc_power: 'Spacecraft transmitter power',
            self.in_sc_ant_d: 'Spacecraft antenna diameter',
            self.in_sc_ant_eta: 'Spacecraft antenna efficiency',
            self.in_sc_point: 'Spacecraft pointing offset',
            self.in_sc_t_sys: 'Spacecraft system noise temperature',
            
            # ground station
            self.in_gs_power: 'Ground station transmitter power',
            self.in_gs_ant_d: 'Ground station antenna diameter',
            self.in_gs_point: 'Ground station pointing offset',
            self.in_gs_ant_eta: 'Ground station antenna efficiency',
            self.in_gs_t_sys: 'Ground station system noise temperature',
            
            # special
            self.in_elong: 'Elongation angle',
            self.in_elev: 'Elevation angle',
        }
        
        self.calculate.clicked.connect(self.check_for_errors)
        self.savebutton.clicked.connect(self.save_json)
        self.loadbutton.clicked.connect(self.load_json)
        self.dropdown_planet.currentIndexChanged.connect(self.check_planet_choice)
        self.planet_idx = 0
        self.in_elong.setDisabled(True)
        self.colours = {
            'gray': 'QLineEdit { background-color: lightgray }',
            'red': 'QLineEdit { background-color: rgb(255, 200, 200) }',
            'white': 'QLineEdit { background-color: white }',
            'margin_green': 'QLabel { background-color: lightgreen }',
            'margin_red': 'QLabel { background-color: rgb(255, 200, 200) }'
        }
        self.in_elong.setStyleSheet(self.colours['gray'])
        
        for input_box in self.all_text_inputs_with_validators:
            input_box.textChanged.connect(lambda x, input_box=input_box: self.text_changed(input_box))
        self.in_elong.textChanged.connect(lambda: self.text_changed(self.in_elong))
        self.in_elev.textChanged.connect(lambda: self.text_changed(self.in_elev))
        
        self.set_tab_order()

    def save_json(self):
        default_dir = 'cases' if os.path.isdir('cases') else '.'
        file_to_save = QtWidgets.QFileDialog.getSaveFileName(
            self.savebutton,'Save configuration', default_dir, 'JSON Files (*.json)')
        if file_to_save[0]:
            with open(file_to_save[0], 'w') as f:
                json.dump(self.generate_json(), f)
        
    def load_json(self):
        default_dir = 'cases' if os.path.isdir('cases') else '.'
        file_to_open = QtWidgets.QFileDialog.getOpenFileName(
            self.loadbutton, 'Open configuration', default_dir, 'JSON Files (*.json)')
        if file_to_open[0]:
            with open(file_to_open[0], 'r') as f:
                self.load_configuration(json.load(f))

    def generate_json(self):
        all_field_contents = dict()
        for field in self.all_text_inputs_with_validators:
            field_name = self.normal_names[field]
            field_text = field.text()
            all_field_contents[field_name] = field_text
        all_field_contents['Planet selection'] = self.dropdown_planet.currentIndex()
        all_field_contents['Elongation angle'] = self.in_elong.text()
        all_field_contents['Elevation angle'] = self.in_elev.text()
        return {'all_field_contents': all_field_contents}
        
    def load_configuration(self, data):
        if data['all_field_contents']:
            for common_name, field_value in data['all_field_contents'].items():
                if common_name == 'Elongation angle':
                    self.in_elong.setText(field_value)
                elif common_name == 'Elevation angle':
                    self.in_elev.setText(field_value)
                elif common_name == 'Planet selection':
                    self.dropdown_planet.setCurrentIndex(int(field_value))
                else:
                    for obj, normal_name in self.normal_names.items():
                        if normal_name == common_name:
                            obj.setText(field_value)
        self.check_planet_choice()
        if data['constraints']:
            for obj in self.all_text_inputs_with_validators:
                obj.setDisabled(False)
                obj.setStyleSheet(self.colours['white'])
            for common_name, constraint in data['constraints'].items():
                for obj, normal_name in self.normal_names.items():
                    if normal_name == common_name:
                        if constraint:
                            obj.setDisabled(True)
                            obj.setStyleSheet(self.colours['gray'])
            self.in_elong.setDisabled(True)
            self.in_elev.setDisabled(True)
            self.dropdown_planet.setDisabled(True)
            self.in_elong.setStyleSheet(self.colours['gray'])
            self.in_elev.setStyleSheet(self.colours['gray'])
            self.dropdown_planet.setStyleSheet('QComboBox { background-color: lightgray } ')
    
    def set_tab_order(self):
        self.centralwidget.setTabOrder(self.in_swath_width, self.in_px_size)
        self.centralwidget.setTabOrder(self.in_px_size, self.in_bppx)
        self.centralwidget.setTabOrder(self.in_bppx, self.in_duty_cycle)
        self.centralwidget.setTabOrder(self.in_duty_cycle, self.in_dl_time)
        self.centralwidget.setTabOrder(self.in_dl_time, self.in_req_dl_ebn0)
        self.centralwidget.setTabOrder(self.in_req_dl_ebn0, self.in_sc_power)
        self.centralwidget.setTabOrder(self.in_sc_power, self.in_sc_ant_d)
        self.centralwidget.setTabOrder(self.in_sc_ant_d, self.in_sc_ant_eta)
        self.centralwidget.setTabOrder(self.in_sc_ant_eta, self.in_sc_point)
        self.centralwidget.setTabOrder(self.in_sc_point, self.in_sc_t_sys)
        self.centralwidget.setTabOrder(self.in_sc_t_sys, self.in_gs_power)
        self.centralwidget.setTabOrder(self.in_gs_power, self.in_gs_ant_d)
        self.centralwidget.setTabOrder(self.in_gs_ant_d, self.in_gs_point)
        self.centralwidget.setTabOrder(self.in_gs_point, self.in_gs_ant_eta)
        self.centralwidget.setTabOrder(self.in_gs_ant_eta, self.in_gs_t_sys)
        self.centralwidget.setTabOrder(self.in_gs_t_sys, self.in_dl_f)
        self.centralwidget.setTabOrder(self.in_dl_f, self.in_turn_around)
        self.centralwidget.setTabOrder(self.in_turn_around, self.in_tx_loss_factor)
        self.centralwidget.setTabOrder(self.in_tx_loss_factor, self.in_rx_loss_factor)
        self.centralwidget.setTabOrder(self.in_rx_loss_factor, self.in_path_loss)
        self.centralwidget.setTabOrder(self.in_path_loss, self.in_up_req_ebn0)
        self.centralwidget.setTabOrder(self.in_up_req_ebn0, self.in_up_r_mantissa)
        self.centralwidget.setTabOrder(self.in_up_r_mantissa, self.in_up_r_exp)
        self.centralwidget.setTabOrder(self.in_up_r_exp, self.dropdown_planet)
        self.centralwidget.setTabOrder(self.dropdown_planet, self.in_orbit_alt)
        self.centralwidget.setTabOrder(self.in_orbit_alt, self.in_elong)
        self.centralwidget.setTabOrder(self.in_elong, self.in_elev)

    def check_planet_choice(self):
        self.planet_idx = self.dropdown_planet.currentIndex()
        if self.planet_idx <= 1: # earth or moon
            self.in_elong.setDisabled(True)
            self.in_elev.setDisabled(False)
            self.in_elong.setStyleSheet(self.colours['gray'])
        else: # interplanetary
            self.in_elong.setDisabled(False)
            self.in_elev.setDisabled(True)
            self.in_elev.setStyleSheet(self.colours['gray'])
            
    def text_changed(self, input_box):
        input_box.setStyleSheet('QLineEdit { background-color: rgb(255, 255, 255)}')

    def show_calculation_error(self, error_text):
        msg = QtWidgets.QMessageBox()
        msg.setWindowTitle("Calculation error!")
        msg.setText("There were one or more errors with the following input fields:")
        msg.setIcon(QtWidgets.QMessageBox.Icon.Critical)
        msg.setInformativeText(error_text)
        msg.exec()
    
    def check_for_errors(self):        
        errors_found = False
        error_string = ''
        
        for input_box, validator in self.all_text_inputs_with_validators.items():
            input_box.setValidator(validator)
            if not input_box.hasAcceptableInput():
                error_string += self.normal_names[input_box]
                input_box.setStyleSheet(self.colours['red'])
                error_string += '\n'
                errors_found = True
                
        self.in_elev.setValidator(self.validate_special_elevation)
        self.in_elong.setValidator(self.validate_special_elongation)
        
        if self.planet_idx <= 1 and not self.in_elev.hasAcceptableInput():
            self.in_elev.setStyleSheet(self.colours['red'])
            self.in_elong.setStyleSheet(self.colours['gray'])
            errors_found = True
            error_string += 'Elevation angle\n'
        if self.planet_idx >= 2 and not self.in_elong.hasAcceptableInput():
            self.in_elong.setStyleSheet(self.colours['red'])
            self.in_elev.setStyleSheet(self.colours['gray'])
            errors_found = True
            error_string += 'Elongation angle\n'
        
        turn_around_txt = self.in_turn_around.text()
        if '/' in turn_around_txt or turn_around_txt == '':
            try:
                num_str, denom_str = turn_around_txt.split('/')
                self.num, self.denom = float(num_str), float(denom_str)
            except Exception:
                errors_found = True
                error_string += 'Turn around ratio\n'
                self.in_turn_around.setStyleSheet(self.colours['red'])
        else:
            self.num = float(turn_around_txt)
            self.denom = 1
        
        if errors_found:
            self.show_calculation_error(error_string)
        else:
            self.calculate_budget()
    
    def fmt(self, value):
        val_str = '+' if value >= 0 else '-'
        val_str += str(round(abs(value), 2))
        return val_str
        
    def calculate_budget(self):
        # INPUT PROCESSING
        f_ghz_downlink = float(self.in_dl_f.text())
        f_downlink = f_ghz_downlink * 10 ** 9
        f_ghz_uplink = f_ghz_downlink * self.num / self.denom
        f_uplink = f_ghz_uplink * 10 ** 9
        wavelength_downlink = fns.freq_to_wavelength(f_downlink)
        wavelength_uplink = fns.freq_to_wavelength(f_uplink)
        planet_names = {0: 'Earth', 1: 'Moon', 2: 'Mercury', 3: 'Mars', 4: 'Saturn'}
        planet = planet_names[self.dropdown_planet.currentIndex()]
        elong = 0 if self.in_elong.text() == '' else float(self.in_elong.text())
        elev = 90 if self.in_elev.text() == '' else float(self.in_elev.text())
        uplink_R = float(self.in_up_r_mantissa.text()) * 10 ** (float(self.in_up_r_exp.text()))
        one_over_k_b = fns.one_over_k_b_db()
            
        
        # DOWNLINK CALCULATIONS
        p_downlink = fns.p_db(float(self.in_sc_power.text()))
        l_l_downlink = fns.db(float(self.in_tx_loss_factor.text()))
        g_t_downlink = fns.g_ant_db(wavelength_downlink, float(self.in_sc_ant_d.text()),
                                    float(self.in_sc_ant_eta.text()))
        l_a_downlink = float(self.in_path_loss.text())
        l_s_downlink = fns.l_s_db(float(self.in_orbit_alt.text()), elev, wavelength_downlink, planet, elong)
        g_r_downlink = fns.g_ant_db(wavelength_downlink, float(self.in_gs_ant_d.text()),
                                    float(self.in_gs_ant_eta.text()))
        l_pr_downlink = fns.l_pr_db(f_ghz_downlink, float(self.in_sc_ant_d.text()), float(self.in_sc_point.text()),
                                    float(self.in_gs_point.text()))
        l_r_downlink = fns.db(float(self.in_rx_loss_factor.text()))
        one_over_r_downlink = fns.one_over_r_dl_db(float(self.in_swath_width.text()), float(self.in_px_size.text()), 
                                                int(self.in_bppx.text()), float(self.in_orbit_alt.text()), planet,
                                                float(self.in_duty_cycle.text()), float(self.in_dl_time.text()))
        one_over_k_b_downlink = one_over_k_b
        one_over_t_s_downlink = fns.one_over_t_s_db(float(self.in_gs_t_sys.text()))
        
        eb_n0_downlink = p_downlink + l_l_downlink + g_t_downlink + l_a_downlink + l_s_downlink + g_r_downlink \
            + l_pr_downlink + l_r_downlink + one_over_r_downlink + one_over_k_b_downlink + one_over_t_s_downlink
        eb_n0_req_downlink = float(self.in_req_dl_ebn0.text())
        eb_n0_margin_downlink = eb_n0_downlink - eb_n0_req_downlink
        
        
        # UPLINK CALCULATIONS
        p_uplink = fns.p_db(float(self.in_gs_power.text()))
        l_l_uplink = fns.db(float(self.in_tx_loss_factor.text()))
        g_t_uplink = fns.g_ant_db(wavelength_uplink, float(self.in_gs_ant_d.text()), float(self.in_gs_ant_eta.text()))
        l_a_uplink = float(self.in_path_loss.text())
        l_s_uplink = fns.l_s_db(float(self.in_orbit_alt.text()), elev, wavelength_uplink, planet, elong)
        g_r_uplink = fns.g_ant_db(wavelength_uplink, float(self.in_sc_ant_d.text()), float(self.in_sc_ant_eta.text()))
        l_pr_uplink = fns.l_pr_db(f_ghz_uplink, float(self.in_sc_ant_d.text()), float(self.in_sc_point.text()), 
                                  float(self.in_gs_point.text()))
        l_r_uplink = fns.db(float(self.in_rx_loss_factor.text()))
        one_over_r_uplink = fns.db(uplink_R, inverse=True)
        one_over_k_b_uplink = one_over_k_b
        one_over_t_s_uplink = fns.one_over_t_s_db(float(self.in_sc_t_sys.text()))
        
        eb_n0_uplink = p_uplink + l_l_uplink + g_t_uplink + l_a_uplink + l_s_uplink + g_r_uplink + l_pr_uplink \
            + l_r_uplink + one_over_r_uplink + one_over_k_b_uplink + one_over_t_s_uplink
        eb_n0_req_uplink = float(self.in_up_req_ebn0.text())
        eb_n0_margin_uplink = eb_n0_uplink - eb_n0_req_uplink
        
        
        # OUTPUT PROCESSING
        self.out_dl_p.setText(self.fmt(p_downlink))
        self.out_dl_l_l.setText(self.fmt(l_l_downlink))
        self.out_dl_g_t.setText(self.fmt(g_t_downlink))
        self.out_dl_l_a.setText(self.fmt(l_a_downlink))
        self.out_dl_l_s.setText(self.fmt(l_s_downlink))
        self.out_dl_g_r.setText(self.fmt(g_r_downlink))
        self.out_dl_l_pr.setText(self.fmt(l_pr_downlink))
        self.out_dl_l_r.setText(self.fmt(l_r_downlink))
        self.out_dl_1_r.setText(self.fmt(one_over_r_downlink))
        self.out_dl_1_k_b.setText(self.fmt(one_over_k_b_downlink))
        self.out_dl_1_t_s.setText(self.fmt(one_over_t_s_downlink))
        self.out_dl_eb_n0.setText(self.fmt(eb_n0_downlink))
        self.out_dl_eb_n0_req.setText(self.fmt(eb_n0_req_downlink))
        self.out_dl_margin.setText(self.fmt(eb_n0_margin_downlink))
        
        self.out_ul_p.setText(self.fmt(p_uplink))
        self.out_ul_l_l.setText(self.fmt(l_l_uplink))
        self.out_ul_g_t.setText(self.fmt(g_t_uplink))
        self.out_ul_l_a.setText(self.fmt(l_a_uplink))
        self.out_ul_l_s.setText(self.fmt(l_s_uplink))
        self.out_ul_g_r.setText(self.fmt(g_r_uplink))
        self.out_ul_l_pr.setText(self.fmt(l_pr_uplink))
        self.out_ul_l_r.setText(self.fmt(l_r_uplink))
        self.out_ul_1_r.setText(self.fmt(one_over_r_uplink))
        self.out_ul_1_k_b.setText(self.fmt(one_over_k_b_uplink))
        self.out_ul_1_t_s.setText(self.fmt(one_over_t_s_uplink))
        self.out_ul_eb_n0.setText(self.fmt(eb_n0_uplink))
        self.out_ul_eb_n0_req.setText(self.fmt(eb_n0_req_uplink))
        self.out_ul_margin.setText(self.fmt(eb_n0_margin_uplink))
        
        if eb_n0_margin_downlink >= 3:
            self.out_dl_margin.setStyleSheet(self.colours['margin_green'])
        else:
            self.out_dl_margin.setStyleSheet(self.colours['margin_red'])
        if eb_n0_margin_uplink >= 3:
            self.out_ul_margin.setStyleSheet(self.colours['margin_green'])
        else:
            self.out_ul_margin.setStyleSheet(self.colours['margin_red'])
    

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
